// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Search.Models
{
    public partial class Intersection
    {
        internal static Intersection DeserializeIntersection(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> baseStreet = default;
            Optional<string> secondaryStreet1 = default;
            Optional<string> secondaryStreet2 = default;
            Optional<string> intersectionType = default;
            Optional<string> displayName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("baseStreet"u8))
                {
                    baseStreet = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("secondaryStreet1"u8))
                {
                    secondaryStreet1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("secondaryStreet2"u8))
                {
                    secondaryStreet2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("intersectionType"u8))
                {
                    intersectionType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
            }
            return new Intersection(baseStreet.Value, secondaryStreet1.Value, secondaryStreet2.Value, intersectionType.Value, displayName.Value);
        }
    }
}
